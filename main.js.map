{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/profanity/profanity.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/giphy/giphy.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfanityService {\n\turl = '/profanity';\t// the rest is done by the proxy configured in angular.json\n\t// user = 'yogibimbi';\n\tkey = '6f8fba196ac6f3ab123115463946af91'; // for webpurify\n\tactive = false;\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tcheck(term) {\n\t\tlet url = `${this.url}?method=webpurify.live.check&format=json&api_key=${this.key}&text=${term}`; // webpurify\n\t\treturn this.http.get(\n\t\t\turl\n\t\t).pipe(\n\t\t\tswitchMap(data => {\n\t    \t\tthis.active = data['rsp'].found > 0; // this is good enough for app.profanityCheck (which still must subscribe!)\n\t\t\t\treturn of(this.active); // this needs to be here for testing\n\t\t\t})\n\t\t);\n\n\t}\n\n\tgetMessage = function () {\t// puts a couple of standard images as a slightly undercover\n\t\t// profanity message out in the results list\n\t\t// defining it as a property, it can be grafted to the mock services\n\t\tconst images = [\n\t\t\t'orly.gif',\n\t\t\t'mouth.jpg',\n\t\t\t'soap.gif',\n\t\t\t'thinking.gif',\n\t\t\t'seals.gif',\n\t\t\t'here.gif',\n\t\t\t'kittens.gif'\n\t\t]\n\t\tconst baseUrl = '/assets/images/';\n\t\tconst items = images.map(image => {return {\n\t\t\tsrc: baseUrl + image,\n\t\t\tlink: 'http://' + window.location.host + \"?\" + image.replace(/\\..*/, ''),\n\t\t\ttitle: 'Click this for something more decent. And a better world.'\n\t\t}});\n\t\tconst page = {\n\t\t\titems: items,\n\t\t\ttotal: items.length\n\t\t}\n\t\treturn of(page);\n\t}\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common'; \nimport { FormsModule } from '@angular/forms';\nimport { of } from 'rxjs';\n\nimport { ProfanityService } from './services/profanity/profanity.service';\nimport { GiphyService } from './services/giphy/giphy.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\ttitle = 'fdx-giphy';\n\tsearch = ''; // current search term as entered by the user\n\tpage = {\n\t\ttotal: 0, // total number of items in the current search\n\t\tindex: 1,\n\t\titems: [],\n\t\tsize: 10, // default number of items shown in one page\n\t\tcount: 5, // number of pages selectable in the paginator element\n\t\tellipses: false, // ellipses setting of the pagination element\n\t\trotation: true // dto. rotation setting\n\t};\n\timages = {\n\t\tloaded: 0, // number of currently loaded items images;\n\t\t// as long as it is smaller than the number of items in the search,\n\t\t// the progress bar is shown\n\t}\n\n\tconstructor (public profanity: ProfanityService, public giphy: GiphyService) {\n\n\t}\n\n\tngOnInit() {\n\t\tlet search = window.location.search; // get the current search term from  the query string\n\t\t/*\n\t\t\tthis allows the profanity message disguised as a search result to work\n\t\t\twith links on the images, but also, in the current implementation, is a\n\t\t\tbackdoor to smuggle profane searches past the profanity check. Since it\n\t\t\tit is not a very obvious backdoor, I'll leave it at that for the time\n\t\t\tbeing, however\n\t\t*/\n\t\tthis.search = search.replace(/^\\W*(\\w+).*/, \"$1\");\t// trim the garbage a bit\n\t\tif (this.search) {\n\t\t\tthis.profanityCheck();\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tif (this.search) {\n\t\t\t// this.profanityCheck();\n\t\t\tthis.updateSearch();\n\t\t}\n\t}\n\n\tpaginationChange(event) {\n\t\tthis.page.index = event;\n\t\tthis.images.loaded = 0;\n\t\tthis.updateSearch();\n\t}\n\n\tpageSizeChange(size) {\n\t\tconst pos = (this.page.index - 1) * this.page.size;\n\t\tthis.page.size = size;\n\t\tthis.page.index = Math.floor(pos / size) + 1;\n\t\tthis.images.loaded = 0;\n\t\tthis.updateSearch();\n\t}\n\n\tgetSearch(search?) {\n\t\t// do profanity check\n\t\tif (search) {this.search = search}\n\t\tthis.page.index = 1;\n\t\tthis.page.total = 0;\n\t\tthis.page.items = [];\n\t\tthis.images.loaded = 0;\n\t\tthis.updateSearch();\n\t}\n\n\tupdateSearch() {\n\t\tif (!this.profanity.active) {\n\t\t\tthis.giphy.search(this.search, this.page).subscribe(page => {\n\t\t\t\tthis.page.total = page.total;\n\t\t\t\tthis.page.items = page.items;\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.profanity.getMessage().subscribe(page => {\n\t\t\t\tthis.page.items = page.items;\n\t\t\t\tthis.page.total = page.total;\n\t\t\t});\n\t\t}\t\t\n\t}\n\n\tundoSearch() {\n\t\tthis.search = this.giphy.currentSearch;\n\t}\n\n\tprofanityCheck() {\n\t\tthis.profanity.check(this.search).subscribe(() => {});\n\t}\n\n\timageLoading(event) {\n\t\tthis.images.loaded++;\n\t}\n}\n","<!--thought a router might come in useful during installation; in other words: the installer talked me into it...-->\n<!--router-outlet></router-outlet-->\n\n<header class=\"d-flex \">\n\t<div></div>\n\t<nav class=\"d-flex justify-content-center flex-row\">\n\t\t<label for=\"searchText\">Search for…</label>\n\t\t<input\n\t\t\tid=\"searchText\"\n\t\t\tclass=\"btn-outline-primary profane\"\n\t\t\t[ngClass]=\"{profane: profanity.active}\"\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"kittens?\"\n\t\t\t[(ngModel)]=\"search\"\n\t\t\t(keyup.enter)=\"getSearch()\"\n\t\t\t(keyup.escape)=\"undoSearch()\"\n\t\t\t(keyup)=\"profanityCheck()\"\n\t\t/>\n\t\t<button\n\t\t\tid=\"searchButton\"\n\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t[ngClass]=\"{profane: profanity.active}\"\n\t\t\t(click)=\"getSearch()\"\n\t\t>\n\t\t\t…on giphy!\n\t\t</button>\n\t</nav>\n\t<div ngbDropdown #infoDrop>\n\t\t<button ngbDropdownToggle\n\t\t\tid=\"infoButton\"\n\t\t\tclass=\"btn btn-outline-primary info\"\n\t\t>\n\t\t\tinfo\n\t\t</button>\n\t     <div ngbDropdownMenu aria-labelledby=\"dropdownForm1\">\n\t      \t<div class=\"content-wrapper\">\n\t\t     \t<!-- probably better injected by a service... -->\n\t      \t\t<p>The absolute final user manual</p>\n\n\t      \t\t<ol>\n\t      \t\t\t<li>Typing text in the search box is evaluated for profanity as you type. Be nice! If it turns red, you are not being nice. When you submit the search, the app will let you know if you are not being nice.<br/>The app uses a service called webpurify to decide what is nice and what is not. Take it up with them if you think they are being picky!</li>\n\n\t      \t\t\t<li>Submitting a search happens by either hitting \"enter\" while in the search box, or pressing the button.</li>\n\n\t      \t\t\t<li>If you did type something nice and there are results, they will be displayed as items in a vertical list. Hovering over them displays the text giphy has for them in their database, clicking on them will bring you to their giphy-page. If there are more images than fits in the viewport, you can scroll.</li>\n\n\t      \t\t\t<li>If you were not nice, there will also be results. Just not the ones you expected, probably. That is why they might better be called \"consequences\" instead of \"results\". But, in general, they will function as described before.</li>\n\n\t      \t\t\t<li>In the \"images\" pulldown in the bottom left corner you can select how many images will be displayed on one result page. Default is 10. More images take longer. Duh. In the right bottom corner is a progress bar which informs you how much longer you have to wait for completion while stuff is still loading.</li>\n\n\t      \t\t\t<li>The pagination element in the bottom middle will let you navigate through the result pages. |< and >| will take you to the first and last pages, respectively, < and > to the previous and next.<br/>The page numbers allow you to jump to pages directly. Albeit, only a maximum of 5 pages will be directly accessible this way. The current page is selected and in the middle, unless it's one of the first or last two pages, obviously. If you click a new page index, it will rotate into the middle, if possible. This way you can access all the other pages, by rotating them into the middle, poco a poco.</li>\n\t      \t\t</ol>\n\t      \t</div>\n\t      </div>\n\t</div>\n</header>\n\n<div *ngIf=\"page.items.length\" class=\"results d-flex justify-content-center\">\n\t<ul>\n\t\t<li *ngFor=\"let item of page.items; let i = index\">\n\t\t\t<a [href]=\"item.link\" id=\"items{{page.size * (page.index - 1) + i + 1}}\">\n\t\t\t\t<img\n\t\t\t\t\t[src]=\"item.src\"\n\t\t\t\t\theight=\"200\"\n\t\t\t\t\t[title]=\"item.title\"\n\t\t\t\t\t(load)=\"imageLoading($event)\"\n\t\t\t\t/>\n\t\t\t</a>\n\t\t</li>\n\t</ul>\n</div>\n\n<footer *ngIf=\"page.items.length\" class=\"d-flex \">\n\t<div>\n\t\t<div>\n\t\t\t<div ngbDropdown class=\"d-inline-block\">\n\t\t\t\t<button class=\"btn btn-outline-primary\" id=\"pageSizeDD\" ngbDropdownToggle>{{ page.size }}</button>\n\t\t\t\t<div ngbDropdownMenu aria-labelledby=\"pageSizeDD\">\n\t\t\t\t\t<button ngbDropdownItem (click)=\"pageSizeChange(5)\">5</button>\n\t\t\t\t\t<button ngbDropdownItem (click)=\"pageSizeChange(10)\">10</button>\n\t\t\t\t\t<button ngbDropdownItem (click)=\"pageSizeChange(25)\">25</button>\n\t\t\t\t\t<button ngbDropdownItem (click)=\"pageSizeChange(50)\">50</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<label for=\"pageSizeDD\">images</label>\n\t\t</div>\n\t</div>\n\t<ngb-pagination class=\"d-flex justify-content-center\" *ngIf=\"page.items\"\n\t\t[collectionSize]=\"page.total\"\n\t\t[(page)]=\"page.index\"\n\t\t[pageSize]=\"page.size\"\n\t\t[boundaryLinks]=\"true\"\n\t\t[maxSize]=\"page.count\" [rotate]=\"page.rotation\" [ellipses]=\"page.ellipses\"\n\t\t(pageChange)=\"paginationChange($event)\"\n\t\taria-label=\"search result pagination\">\n\t\t<ng-template ngbPaginationFirst>|&lt;</ng-template>\n\t\t<ng-template ngbPaginationLast>&gt;|</ng-template>\n\t\t<ng-template ngbPaginationPrevious>&lt;</ng-template>\n\t\t<ng-template ngbPaginationNext>&gt;</ng-template>\n\t\t<ng-template ngbPaginationNumber let-p>{{ p }}</ng-template>\n\t</ngb-pagination>\n\t<div>\n\t\t<ngb-progressbar *ngIf=\"images.loaded < page.items.length\" type=\"primary\"\n\t\t\t[value]=\"100 * (images.loaded / page.items.length)\"\n\t\t\t[striped]=\"true\"\n\t\t>{{ images.loaded }} loaded</ngb-progressbar>\n\t</div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ProfanityService } from './services/profanity/profanity.service';\nimport { GiphyService } from './services/giphy/giphy.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tHttpClientModule,\n\t\tAppRoutingModule,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tNgbModule\n\t],\n\tproviders: [\n\t\tProfanityService,\n\t\tGiphyService\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GiphyService {\n\tuser = '';\n\tkey = 'CdRKiCMbTnt9CkZTZ0lGukSczk6iT4Z6';\n\turl = '/giphy';\t// the rest is done by the proxy configured in angular.json\n\tcurrentSearch = ''; // parameter that allows for undo of search param when esc key is hit in search box\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tsearch(text, page = {index: 0, size: 10}) {\n\t\t// we need .size and .index from page\n\t\tlet url = `${this.url}?&api_key=${this.key}&q=${text}&limit=${page.size}&offset=${(page.index - 1) * page.size}`;\n\t\treturn this.http.get(\n\t\t\turl\n\t\t).pipe(\n\t\t\tswitchMap(data => {\n\t\t\t\tthis.currentSearch = text;\n\t\t\t\tconst total = data['pagination'].total_count;\n\t\t\t\tlet pics = data['data'];\n\t\t\t\tconst items = pics.map(pic => { return {\n\t\t\t\t\tsrc: pic.images.fixed_height.url,\n\t\t\t\t\tlink: pic.url,\n\t\t\t\t\ttitle: pic.title\n\t\t\t\t}});\n\t\t\t\tconst page = {\n\t\t\t\t\ttotal: total,\n\t\t\t\t\titems: items\n\t\t\t\t}\n\t\t\t\treturn of(page);\n\t\t\t})\n\t\t);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}